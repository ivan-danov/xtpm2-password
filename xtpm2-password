#!/bin/bash

#**********************************************************************
#                            XTpm2Password                            *
#---------------------------------------------------------------------*
# This program is free software; you can redistribute it and/or       *
# modify it under the terms of the GNU Lesser General Public License  *
# as published by the Free Software Foundation; either version 2      *
# of the License, or (at your option) any later version.              *
#                                                                     *
# This program is distributed in the hope that it will be useful,     *
# but WITHOUT ANY WARRANTY; without even the implied warranty of      *
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                *
#**********************************************************************

set -eu

# SCRIPT_DIR=$(dirname $(realpath ${BASH_SOURCE[0]}))

if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root"
	exit 1
fi

argc=$#
if [ ${argc} -ne 2 ]; then
	echo "Usage:"
	echo "	${0} <old password> <new password>"
	exit 1
fi

function no_ctrlc {
	echo "CTRL-C"
	exit 1
}
function atexit {
	echo "Exit"
}
trap atexit EXIT
trap no_ctrlc SIGINT

if [ ! -f /etc/crypttab ]; then
	echo "No /etc/crypttab"
	exit 1
fi
if [ $(grep -c luks /etc/crypttab 2>/dev/null|| echo 0) -le 0 ]; then
	echo "No luks partitions in /etc/crypttab"
	exit 1
fi

OLD_PWD=${1}
NEW_PWD=${2}

if [ "x${CRYPTDISK}" == "x" ]; then
	CRYPTDISK=/dev/disk/by-uuid/$(grep luks /etc/crypttab|cut -d ' ' -f 2|cut -d '=' -f 2 2>/dev/null)
	if [ ! -b ${CRYPTDISK} ]; then
		echo "Cannot find encrypted disk from crypttab"
		exit 1
	fi
fi

# change password in luks from OLD_PWD to NEW_PWD
# NOTE: newPassword.key is on encrypted partition
echo -n $NEW_PWD > newPassword.key
echo -n $OLD_PWD | cryptsetup luksChangeKey ${CRYPTDISK} newPassword.key
rm newPassword.key

# set TPM

# NOTE: use same TPM2_INITRAMFS_TOOL_OPTS in xtpm2-password and xtpm2-unseal

# use default "--pcrs 7 --banks SHA256"
TPM2_INITRAMFS_TOOL_OPTS=""
# use custom
#TPM2_INITRAMFS_TOOL_OPTS="--pcrs 0,1,2,3,4,5,6,7 --banks SHA256"

# store passphrase to TPM
tpm2-initramfs-tool ${TPM2_INITRAMFS_TOOL_OPTS} seal --data "${NEW_PWD}" > /dev/null

# Add binaries and libraries to initramfs
cat > /etc/initramfs-tools/hooks/xtpm2-password-initramfs-tool <<EOF
. /usr/share/initramfs-tools/hook-functions

copy_exec /usr/lib/x86_64-linux-gnu/libtss2-tcti-device.so.0
copy_exec /usr/bin/tpm2-initramfs-tool
copy_exec /usr/lib/xtpm2-password/xtpm2-unseal
EOF

chmod 755 /etc/initramfs-tools/hooks/xtpm2-password-initramfs-tool

if [ -f /etc/crypttab ]; then
	sed -i 's/luks/luks,discard,keyscript=\/usr\/lib\/xtpm2-password\/xtpm2-unseal/g' /etc/crypttab
fi

# generate new initramfs
update-initramfs -u

sync
